O Gitflow é apenas uma ideia abstrata do fluxo de trabalho Git, ou seja, ele dita que tipos de ramificações configurar e como fazer o merge.

- Branches Master e Develop

Ao invés de uma única ramificação master, esse fluxo de trabalho usa duas ramificações para registrar o histórico do projeto. A ramificação master armazena o histórico do lançamento oficial, e a ramificação develop serve como uma ramificação de integração para recursos. Também é conveniente marcar todos os commits na ramificação master com um número de versão.

A versão develop vai manter o histórico completo do projeto, enquanto a versão master vai conter uma versão abreviada do projeto. Outros desenvolvedores agora vão precisar clonar o repositório central e criar uma ramificação de rastreamento para a de develop.

- Branches Feature/Recurso

Cada novo recurso deve residir na própria ramificação, que pode ser enviada por push para o repositório central para backup/colaboração. No entanto, em vez de serem ramificações da ramificação principal, as ramificações feature usam a ramificação develop como pai. Quando um recurso é concluído, ele passa por merge de volta para a ramificação de desenvolvimento. Os recursos não devem nunca interagir direto com a ramificação master.
Ou seja, as ramificações -> feature sempre vão sair da develop <-

Criando ramificação de features:
git flow feature start feature_<nome_da_branch>

Ao finalizar, e precisar dar o merge entre sua noma branch e a develop, usar o comando:
git add .
git commit -m 'mensagem'
git flow feature finish feature_<nome_da_branch_>

- Branches Release

Uma vez que a ramificação develop adquiriu recursos suficientes para um lançamento (ou uma data de lançamento predeterminada está se aproximando), você bifurca uma ramificação release a partir da ramificação develop. Criar esta ramificação dá início ao próximo ciclo de lançamento, portanto nenhum novo recurso pode ser adicionado depois deste ponto — apenas atualizações de segurança, geração de documentação e outras tarefas relacionadas ao lançamento devem ir nesta ramificação. Quando estiver pronta para ser lançada, a ramificação release passa por merge para a ramificação main e é marcada com o número da versão. Ela também deve passar por merge de volta para a ramificação develop, que pode ter progredido desde que o lançamento foi iniciado.
Uma branch sendo exclusivamente dedicada ao lançamento permite que uma equipe se dedique inteiramente nessa branch, aperfeiçoando esta versão do lançamento, enquanto outras equipes trabalham em outras branches. Também ajuda a criar fases de desenvolvimento bem definidas, pois é fácil dizer "Esta semana a gente está se preparando para a versão 4.0" e ver isto na estrutura do repositório

Criando ramificação de features:
git flow release start 0.1.0





















